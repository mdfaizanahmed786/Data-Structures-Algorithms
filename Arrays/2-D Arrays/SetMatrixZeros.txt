Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.

You must do it in place.

 

 A question might be for if matrix contains all zeros and ones:

 THIS IS WILL NOT WORK IF ALL ELEMENTS CONTAINS NEGATIVE, ONLY WORKS FOR 0 AND 1

 TC: O(N*M * (N + M)) + O(N+m)= O(N*M)



 class Solution {
    public:
    void markRow(vector<vector<int>>& matrix, int row){
       
        int cols=matrix[0].size();
        for(int i=0; i<cols; i++){
             if(matrix[row][i]!=0){

            matrix[row][i]=-1;
                }
        }
    }

    public:
      void markCol(vector<vector<int>>& matrix, int col){
           int rows=matrix.size();
            for(int i=0; i<rows; i++){
                if(matrix[i][col]!=0){

            matrix[i][col]=-1;
                }
        }
      }

public:
    void setZeroes(vector<vector<int>>& matrix) {
        int rows=matrix.size();
        int cols=matrix[0].size();

        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                if(matrix[i][j]==0){
                    markRow(matrix, i);
                    markCol(matrix, j);
                }

            }
        }


        for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    for(int i=0; i<rows; i++){
        for(int j=0; j<cols; j++){
            if(matrix[i][j]==-1){
               matrix[i][j]=0;
            }
        }
    }

    
  


    }
};