


The next greater element of some element x in an array is the first greater element that is to the right of x in the same array.

You are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2.

For each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, then the answer for this query is -1.

Return an array ans of length nums1.length such that ans[i] is the next greater element as described above.










class Solution {
public:
    int linearSearch(vector<int> v1, int k, int start) {
        for (int i = start; i < v1.size(); i++) {
            if (v1[i] > k) {
                return v1[i];
            }
        }
        return -1;
    }

    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        vector<int> ans;
        for (int i = 0; i < nums1.size(); i++) {
            int j = 0;
            while (j < nums2.size()) {
                if (nums1[i] == nums2[j]) {
                    int result = linearSearch(nums2, nums2[j], j);
                    if (result != -1) {
                        ans.push_back(result);
                    } else {
                        ans.push_back(-1);
                    }
                    break;
                }
                j++;
            }
        }
        return ans;
    }
};